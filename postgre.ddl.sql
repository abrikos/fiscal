create sequence user_id_seq;

alter sequence user_id_seq owner to postgres;

create table users
(
    id               integer generated by default as identity
        constraint user_pk
            primary key,
    password_hash    text,
    restore_password text,
    strategy         text,
    name             text,
    photo            text,
    email            text not null
        constraint unique_email
            unique
        constraint proper_email
            check (email ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'::text)
);

alter table users
    owner to postgres;

alter sequence user_id_seq owned by users.id;

create table token
(
    id         integer generated by default as identity
        constraint token_pk
            primary key,
    value      text                                not null,
    user_id    integer                             not null
        constraint token_user_id_fk
            references users,
    created_at timestamp default CURRENT_TIMESTAMP not null
);

alter table token
    owner to postgres;

create view v_token_live(id, value, user_id, created_at, live_seconds, xxx) as
SELECT token.id,
       token.value,
       token.user_id,
       token.created_at,
       seconds(token.created_at)                                        AS live_seconds
FROM token;

alter table v_token_live
    owner to postgres;

create function seconds(date timestamp without time zone) returns integer
    immutable
    language sql
as
$$
      SELECT extract(epoch from now()) - extract('epoch' from date);
    $$;

alter function seconds(timestamp) owner to postgres;

